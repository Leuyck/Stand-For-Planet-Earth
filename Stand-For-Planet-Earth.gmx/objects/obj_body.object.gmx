<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>40</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize player
dir = 0;
hspd = 0;
vspd = 0;
spd = 4 ;
shot_delay = 2; //Cadence de tir
heal_delay = 1; // Cadence de heal
vari = 1;
alarm [0] = 0;

// Initialisation de l'objet light

SL_light_ini_begin(); // Commence l'initialisation de l'objet light

sl_light_texture = spr_light; // Texture de la lumière
/*sl_light_xscale = 2; // Facteurs d'étirement x et y de la lumière
sl_light_yscale = 2;
sl_light_shadowsharpness = 1; // Facteur de dureté des ombres
sl_light_color = c_purple; // ????????
*/

// Détermine les objets devant 'occluder' la lumière
SL_light_cast_obj(obj_body,-1);
SL_light_cast_obj(obj_wall,-1);
SL_light_cast_obj(obj_wall_broke,-1);
SL_light_cast_obj(obj_shotgun,-1);
SL_light_cast_obj(obj_bullet2,-1);
SL_light_cast_obj(obj_barrel,-1);
SL_light_cast_obj(obj_crate,-1);


SL_light_ini_end(); // Termine l'initialisation de l'objet light
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the player and the gun
/*
draw_self();


instance_create  (x,y,obj_shotgun);




/*shotgun_offset_x = 15;
shotgun_offset_y = 15;

xpos = x + lengthdir_x(shotgun_offset_x, 15); // or direction
ypos = y + lengthdir_y(shotgun_offset_y, 15);

instance_create(xpos, ypos, obj_shotgun);


/*draw_sprite_ext(spr_shotgun, -1, x, y, 1, 1, dir-90, c_white, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Libère la mémoire utilisée par les surfaces de l'objet
SL_light_free();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bullet Delay Alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Config lumière

// Mise à jour des coordonnées de la lumière
sl_light_x = x;
sl_light_y = y;

sl_light_xscale = 0.2; 
sl_light_yscale = 0.2;
sl_light_angle = 0;
sl_light_color = c_green;
sl_light_power = 1; // Intensité de la lumière. 1 = Max
sl_light_ambientpower = 0.5; // densité de lumière dans les zones d'ombres
sl_light_shadowlength = 1; // Portée de l'ombre
sl_light_shadowfactor = 1.04; 
sl_light_shadowsharpness = 0.20;
sl_light_castshadow = 1;
sl_light_refresh = 2;
sl_light_refreshrate = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move the player
hspd = keyboard_check(ord('D'))-keyboard_check(ord('Q'));
vspd = keyboard_check(ord('S'))-keyboard_check(ord('Z'));
dir = point_direction(x, y, mouse_x, mouse_y);
fire = (mouse_check_button(mb_left) &amp;&amp; alarm[0] &lt;=0);
//heal = (mouse_check_button(mb_right) &amp;&amp; alarm[0] &lt;=0);


if (!place_meeting(x+hspd*spd, y, obj_wall)) {
    x+=hspd*spd;
    }
    
if (!place_meeting(x, y+vspd*spd, obj_wall)) {
    y+=vspd*spd;
    }
    
   
image_angle = dir -90;

// Activation/désactivation de la torche
if keyboard_check_pressed(ord('L')) or mouse_check_button_pressed(mb_right) torch = !torch;

/*if (fire) {
// RESET ALARM
alarm[0] = shot_delay

instance_create (obj_shotgun.x,obj_shotgun.y, obj_bullet2);



with(obj_shotgun) {image_single = 1}
}
else 
{
with (obj_shotgun) {image_single = 0}

}

// FIND TARGET
/*var temp_dir = dir+random_range(-vari, vari);
var temp_x = x+lengthdir_x(48, temp_dir);
var temp_y = y+lengthdir_y(48, temp_dir);
var start_x = temp_x;
var start_y = temp_y;
var collision = (position_meeting(temp_x, temp_y, obj_wall) || position_meeting(temp_x, temp_y, obj_caca) || position_meeting(temp_x, temp_y, obj_fire));

/// Que la balle stop !
while (!collision &amp;&amp; distance_to_point(temp_x, temp_y) &lt; 250){
    temp_x += lengthdir_x(4, temp_dir);
    temp_y += lengthdir_y(4, temp_dir); 
    collision = (position_meeting(temp_x, temp_y, obj_wall) || position_meeting(temp_x, temp_y, obj_caca) || position_meeting(temp_x, temp_y, obj_fire));{
    }
    var shot = instance_create(temp_x, temp_y, obj_bullet2);
    shot.start_x = start_x;
    shot.start_y = start_y;
    
    }
    }
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///création mouvements des jambes 
hspd = keyboard_check(ord('D'))-keyboard_check(ord('Q'));
vspd = keyboard_check(ord('S'))-keyboard_check(ord('Z'));




if (((vspd=1 &amp;&amp; hspd=1) || (vspd=-1 &amp;&amp; hspd=-1))&amp;&amp; instance_number (obj_jambesHG)= 0 ){ //jambes haut gauche bas droite
instance_create (obj_body.x,obj_body.y,obj_jambesHG);}

else if ((vspd=0 || hspd=0) || instance_number (obj_jambesHG) !=1) {
with(obj_jambesHG) {instance_destroy()}}

if (((vspd=-1 &amp;&amp; hspd=1) || (vspd=1 &amp;&amp; hspd=-1))&amp;&amp; instance_number (obj_jambesHD)= 0 ){ //jambes haut droit bas gauche
instance_create (obj_body.x,obj_body.y,obj_jambesHD);}

else if ((vspd=0 || hspd=0) || instance_number (obj_jambesHD)!=1) {
with(obj_jambesHD) {instance_destroy()}}

if (((vspd=1 &amp;&amp; hspd =0 ) || (vspd=-1 &amp;&amp; hspd =0 ))&amp;&amp; instance_number (obj_jambesV)= 0 ){ //jambes haut bas
instance_create (obj_body.x,obj_body.y,obj_jambesV);}

else if (vspd=0 || hspd!=0 || instance_number (obj_jambesV) !=1) {
with(obj_jambesV) {instance_destroy()}}

if (((hspd=1 &amp;&amp; vspd =0)|| (hspd=-1 &amp;&amp; vspd =0))&amp;&amp; instance_number (obj_jambesH)= 0 ){ //jambes droite gauche
instance_create (obj_body.x,obj_body.y,obj_jambesH);}

else if (hspd=0 || vspd!=0 ||instance_number (obj_jambesH) !=1) {
with(obj_jambesH) {instance_destroy()}}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Crée l'objet lumière générant la lampe torche
/*with instance_create(x,y,obj_light_torch)
{parent = other.id;
 sl_light_xscale       = 2.8;
 sl_light_yscale       = 2.8;
 sl_light_shadowfactor = 1.03;
 SL_light_cast_obj(spr_body, -1)};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="80">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(room1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
