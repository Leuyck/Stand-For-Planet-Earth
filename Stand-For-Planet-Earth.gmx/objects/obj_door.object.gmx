<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_door</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_decor_base</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0;
image_speed = 0;

detectionRange = 200;

doorOpen = false;

alarm[0] = -1;
alarm[1] = -1;
alarm[2] = -1;

doorId = 0
openTime = 1;    // temps d'ouverture en secondes
closeTime = 1    // temps de fermeture en secondes
stayOpenTime = 2 // temps en secondes pendant lequel Ã§a reste ouvert


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fin d'alarme de fermeture

image_index = 0;
image_speed = 0;

alarm[0] = -1;
alarm[1] = -1;
alarm[2] = -1;

doorOpen = false;

with(obj_grid)
{
    mp_grid_add_rectangle(grid,other.x-other.sprite_width/2,other.y-other.sprite_height/2,other.x+other.sprite_width/2,other.y+other.sprite_height/2)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fin d'alarme gardant ouvert

var closeSpeed = (image_number-1) / (closeTime * room_speed)

image_speed = -closeSpeed;
alarm[2] = closeTime * room_speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fin d'alarme d'ouverture

image_speed = 0;
image_index = image_number - 1;
alarm[1] = stayOpenTime * room_speed

with(obj_grid)
{
    mp_grid_clear_rectangle(grid,other.x-other.sprite_width/2,other.y-other.sprite_height/2,other.x+other.sprite_width/2,other.y+other.sprite_height/2)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///script pour maintenant la porte ouverte 

if((point_in_circle(obj_localPlayer.x,obj_localPlayer.y,x,y,detectionRange) || point_in_circle (obj_localNpc.x,obj_localNpc.y,x,y,detectionRange))
    &amp;&amp; doorOpen &amp;&amp; image_index == image_number-1)
{
    alarm[0] = -1;
    alarm[1] = stayOpenTime * room_speed
    alarm[2] = -1;
    
    image_speed = 0;
    image_index = image_number - 1;
    
}
if((point_in_circle(obj_localPlayer.x,obj_localPlayer.y,x,y,detectionRange) || point_in_circle (obj_localNpc.x,obj_localNpc.y,x,y,detectionRange))
    &amp;&amp; doorOpen &amp;&amp; alarm[2] != -1 &amp;&amp; alarm[1] == -1)
{
    var openSpeed = (image_number - 1) / (openTime * room_speed);
         
    alarm[0] = openTime * room_speed;
    alarm[1] = -1;
    alarm[2] = -1;
    image_speed = openSpeed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
