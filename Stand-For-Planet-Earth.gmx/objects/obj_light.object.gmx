<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ico_light</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mode = 0;

// Variables utilisées dans Step
time = 0;
increment = 0.1;
l = 0;
d = 0;

SL_light_ini_begin(); // Commence l'initialisation de l'objet light

sl_light_texture = spr_light; // Texture de la lumière


// Détermine les objets devant 'occluder' la lumière
SL_light_cast_obj(obj_localPlayer,-1);
SL_light_cast_obj(obj_localNpc1,-1);
SL_light_cast_obj(obj_hero1,-1);
SL_light_cast_obj(obj_wall,-1);
SL_light_cast_obj(obj_barrel,-1);
SL_light_cast_obj(obj_crate,-1);


SL_light_ini_end(); // Termine l'initialisation de l'objet light
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Libère la mémoire utilisée par les surfaces de l'objet
SL_light_free();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Config lumière

// Mise à jour des coordonnées de la lumière
sl_light_x = x;
sl_light_y = y;



// Configurations des différentes lumières déterminées par la var 'mode' déclarée dans l'event creation code de l'éditeur de room //
switch mode
{
case 1: // Lumière rouge saccadée
{
sl_light_xscale          = 6;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = c_blue;
sl_light_power           = random(1);
sl_light_ambientpower = 0;
sl_light_shadowlength    = 3;
sl_light_shadowfactor    = 1.03;
sl_light_shadowsharpness = 0.5;
sl_light_castshadow = true;
sl_light_refresh = true;
sl_light_refreshrate = 0;

} break;

case 2 : // Petite lumière orange
{
sl_light_xscale = 3; 
sl_light_yscale = sl_light_xscale;
sl_light_color = c_orange;
sl_light_power = 1; // Intensité de la lumière. 1 = Max
sl_light_ambientpower = 0; // densité de lumière dans les zones d'ombres
sl_light_shadowlength = 4; //Portée de l'ombre
sl_light_shadowfactor = 1.01; 
sl_light_shadowsharpness = 0.5;
sl_light_castshadow =true;
sl_light_refresh = true;
sl_light_refreshrate = 0;
} break;

case 3: // Lumière jaune clignotante
{
sl_light_xscale          = 1.33;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = c_red;
sl_light_ambientpower    = 0;
sl_light_power = 1;
sl_light_shadowlength    = 3;
sl_light_shadowfactor    = 1.045;
sl_light_shadowsharpness = 0.4;
sl_light_castshadow = true;
sl_light_refresh = true;
sl_light_refreshrate = 0;

// Clignotement de la lumière
time += 0.03*60/max(fps,1) if time&gt;=pi*2 time=0;

sl_light_power  = 0.33 + (sin(time)+1) / 3;
sl_light_xscale = 0.8 + 0.7*sl_light_power;
sl_light_yscale = sl_light_xscale;
} break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
