<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_npc1_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_speed = 0;

///initialize some variables
xOrigin = x;
yOrigin = y;

remoteNpcId = 0;
npcId = global.npcIdCounter++;
npcType = 0;
spd = 5
spdChase = 3
hspd = 0;
vspd = 0;
state = "";
job = "";
npcHealth = 100;
sight_range = 800;
attack_range =  400;

/*fire1 = false;
shot1_delay = 5; //Cadence de tir
heal_delay = 1; // Cadence de heal
vari = 3; // précision
bulletDirection = 0 //direction de la balle a sa création
*/
alarm [0] = 0;
alarm [1] = 0;
alarm [2] = 1;

show_debug_message ("création npc" + string(global.npcIdCounter));

/// create the path
path = path_add();

patrolRange = 50;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Send npc position to other players
if(instance_exists(obj_server))
{
    with(obj_player)
    {
        buffer_seek(global.bufferServer, buffer_seek_start, 0);
        buffer_write (global.bufferServer, buffer_u8, C_NPC_MOVE_MESSAGE);
        buffer_write (global.bufferServer, buffer_u32, other.npcId);
        buffer_write (global.bufferServer, buffer_f32, other.x);
        buffer_write (global.bufferServer, buffer_f32, other.y);
        buffer_write (global.bufferServer, buffer_u8, other.npcType);
        buffer_write (global.bufferServer, buffer_f32, other.direction);
        buffer_write (global.bufferServer, buffer_u8, other.speed);
        buffer_write(global.bufferServer, buffer_u32, other.sprite_index);
        buffer_write(global.bufferServer, buffer_u8, other.image_index);
        network_send_packet (self.playerSocket, global.bufferServer, buffer_tell(global.bufferServer));
    }
    alarm[2] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set alarm waiting time
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set alarm walking time
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = direction
speed = spd

if (instance_exists (obj_server))
{
    scr_setJobNpc1();
    scr_setSpritesNpc1();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var bulletDamage = other.damage;

if (instance_exists (obj_server))
{
    npcHealth -= bulletDamage;

    if (npcHealth == 0)
    {
        instance_destroy()
    }
}
    
with (other)
{
    instance_destroy();
}


with(obj_player)
{
    buffer_seek(global.bufferServer, buffer_seek_start, 0);
    buffer_write (global.bufferServer, buffer_u8, C_NPC_LIFE_CHANGED_MESSAGE);
    buffer_write (global.bufferServer, buffer_u32, other.npcId);
    buffer_write (global.bufferServer, buffer_u32, other.npcHealth);
    network_send_packet (self.playerSocket, global.bufferServer, buffer_tell(global.bufferServer));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
