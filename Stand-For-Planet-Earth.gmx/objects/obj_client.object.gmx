<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var networkType = network_socket_tcp;
/*global.IPAddress = "122.0.0.1";
var global.port = 8001;*/

socket = network_create_socket (networkType);
isConnected = network_connect(socket, global.IPAddress, global.port);

var bufferSize = 1024;
var bufferType = buffer_fixed;
var bufferAlignment = 1;

global.bufferNetwork = buffer_create(bufferSize, bufferType, bufferAlignment);

time = buffer_read (global.bufferNetwork, buffer_u32);
ping = current_time - time;

global.typing = false;
maxWidth = 300;
blink = false;
global.textClient = "";

global.npcIdCounter = 0;



//scr_showNotification ("Client initialized!");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blink = !blink;

    if (global.typing)
    {
        alarm[0] = room_speed * 1;
    }   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step Event of Object : obj_client

buffer_seek (global.bufferNetwork, buffer_seek_start, 0);
buffer_write (global.bufferNetwork, buffer_u8,1);
buffer_write (global.bufferNetwork, buffer_u32, current_time);
var result = network_send_packet (socket, global.bufferNetwork, buffer_tell(global.bufferNetwork));


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Async Networking Event of Object : ObjClient

var type_event = ds_map_find_value (async_load, "type");
switch (type_event) {

case network_type_disconnect :
room_goto(rm_mainMenu);

break;


case network_type_data :
    var buffer = ds_map_find_value (async_load, "buffer");
    buffer_seek (buffer, buffer_seek_start, 0);
    scr_receivedPacket_client (buffer);
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// game end event of object : client

network_destroy (socket);
buffer_delete (global.bufferNetwork);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_valign (fa_middle);
draw_set_halign (fa_left);
draw_set_font (fnt_1);
draw_set_colour (c_white);

draw_text (5,25, "Client Connected" + string (isConnected)) ;

draw_text (5,40, "My Ping: " + string(ping));

draw_text (5,55, "My pseudo: " + global.playerPseudo);



if(room == rm_world2)
{
    draw_set_halign (fa_right);
    draw_set_font (fnt_3);
    
    if (global.typing) 
    {
        if (!blink)
        {
        draw_text (view_hview, view_wview/3, "You : " + global.textClient);
        }
        else
        {
            draw_text (view_hview, view_wview/3, "You : " + global.textClient + "|");
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room = rm_world2)
{
    if (global.typing)
    {
        if (global.textClient != "")
        {
            //send our message
            buffer_seek (global.bufferNetwork, buffer_seek_start, 0);
            buffer_write (global.bufferNetwork, buffer_u8, 8);
            buffer_write (global.bufferNetwork, buffer_u32, global.playerId);    
            buffer_write (global.bufferNetwork, buffer_string, global.textClient);
            network_send_packet (socket, global.bufferNetwork, buffer_tell(global.bufferNetwork));
            
            global.typing = false;
            
            var chat = instance_create (x, y , obj_chat);
            chat.text = global.textClient;
            chat.owner = obj_localPlayer.id;
            
            global.textClient = "";
        }
    }
    else
    {
        keyboard_string = global.textClient;
        global.typing = true;
        alarm[0] = room_speed * 1 ;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.typing)
{
    if (string_width (keyboard_string) &lt; maxWidth)
    {
        global.textClient = keyboard_string;
    }
    else
    {
        keyboard_string = global.textClient;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
